{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "region": {
      "type": "string"
    },
    "storageAccountName": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "namespace": {
      "type": "string"
    },
    "osSettings": {
      "type": "object"
    },
    "vmSize": {
      "type": "string"
    },
    "subnet": {
      "type": "object"
    },
    "staticIp": {
      "type": "string"
    },
    "opsCenterSettings": {
      "type": "object"
    },
    "dnsName": {
      "type": "string"
    }
  },
  "variables": {
    "subnetRef": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('subnet').vnet), '/subnets/', parameters('subnet').name)]",
    "publicIpName": "[concat(parameters('namespace'), 'PublicIp')]",
    "publicIpRef": "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIpName'))]",
    "vmName": "[concat(parameters('namespace'), 'vm')]",
    "vmRef": "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]",
    "nicName": "[concat(parameters('namespace'), 'nic')]",
    "nicRef": "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
  },
  "resources": [
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIpName')]",
      "location": "[parameters('region')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsName')]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[concat(parameters('namespace'), 'set')]",
      "location": "[parameters('region')]",
      "properties": {}
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('region')]",
      "dependsOn": [
        "[variables('publicIpRef')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "publicIPAddress": {
                "id": "resourceId('Microsoft.Compute/virtualMachines/', variables('publicIpName'))"
              },
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('staticIp')]",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[parameters('region')]",
      "dependsOn": [
        "[variables('nicRef')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computername": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": "[parameters('osSettings').imageReference]",
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/', parameters('namespace'), 'vm-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName') )]"
            }
          ],
          "inputEndpoints": [
            {
              "enableDirectServerReturn": "False",
              "endpointName": "SSH",
              "privatePort": 22,
              "publicPort": 22,
              "protocol": "tcp"
            },
            {
              "enableDirectServerReturn": "False",
              "endpointName": "HTTP",
              "privatePort": 8888,
              "publicPort": 8888,
              "protocol": "tcp"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), '/installopscenter')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('region')]",
      "dependsOn": [
        "[variables('vmRef')]",
        "[variables('nicRef')]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.2",
        "settings": {
          "fileUris": "[parameters('osSettings').scripts]",
          "commandToExecute": "[concat('bash opscenter.sh -n \"', parameters('opsCenterSettings').clusterName , '\" -u ', parameters('adminUsername'), ' -p ', parameters('adminPassword'), ' -k ' , parameters('opsCenterSettings').adminPassword , ' -ed ', parameters('opsCenterSettings').nodeList)]"
        }
      }
    }
  ],
  "outputs": {}
}